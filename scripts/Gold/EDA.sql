SET SEARCH_PATH TO gold;

--  >>>>>>>>>>>>> Explore the High Level details of the database! <<<<<<<<<<<<<<<<<<<<
SELECT current_database();

SELECT *
FROM information_schema.schemata;

SELECT *
FROM information_schema.tables WHERE table_schema IN ('gold','silver','bronze');

SELECT *
FROM information_schema.columns WHERE table_name = 'dim_product';
-- >>>>>>>>>>>>>End <<<<<<<<<<<<<<<<<<<<


-- >>>>>>>>>>>>> Explore dimensions of the dataset <<<<<<<<<<<<<<<<<<<<
SELECT DISTINCT country
FROM gold.dim_customers;

SELECT DISTINCT categry
FROM gold.dim_product;
-- >>>>>>>>>>>>> End <<<<<<<<<<<<<<<<<<<<



-- >>>>>>>>>>>>> Explore dates <<<<<<<<<<<<<<<<<<<<
SELECT
    MIN(order_date) AS first_order,
    MAX(order_date) AS last_order,
    extract(YEARS FROM age(max(order_date), min(order_date)))
FROM gold.fact_sales;

SELECT
    MIN(birth_date) AS Olderst,
    MAX(birth_date) AS youngest
FROM gold.dim_customers;
-- >>>>>>>>>>>>> End <<<<<<<<<<<<<<<<<<<<



-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Explore measures <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    -- Find the Total Sales
SELECT
    sum(sales_amount) AS Total_sales
FROM fact_sales;

    -- Find how many items are sold
SELECT
    sum(quantity) AS Item_count
FROM fact_sales;

    -- Find the average selling price
SELECT
    avg(price) AS avg_price
FROM fact_sales;

    -- Find the Total number of Orders
SELECT count(order_nbumber) AS total_orders
FROM fact_sales;

SELECT count(DISTINCT order_nbumber) AS total_orders
FROM fact_sales;

    -- Find the total number of products
SELECT  count(DISTINCT product_key) AS product_count
FROM dim_product;

    -- Find the total number of customers
SELECT
    count(customer_id) AS customer_count
FROM dim_customers;

    -- Find the total number of customers that has placed an order
SELECT
     count( DISTINCT customer_id) AS customers_with_orders
FROM fact_sales;
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> End of Explore Measures <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Generate the report  <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
CREATE OR REPLACE FUNCTION exp_measure_one()
RETURNS table
    (
    measure_name text,
    measure_value numeric
    )
LANGUAGE plpgsql
AS
    $$
    BEGIN
        RETURN QUERY
        SELECT 'Total_sales' AS measure_name, sum(sales_amount) AS measure_value FROM fact_sales
        UNION ALL

        SELECT 'Total_qty' AS measure_name, sum(quantity) AS measure_value FROM fact_sales
        UNION ALL

        SELECT'Avg_price' AS measure_name, round(avg(price),2) AS measure_value FROM fact_sales
        UNION ALL

        SELECT'Order_count' AS measure_name, count(order_nbumber) AS measure_value FROM fact_sales
        UNION ALL

        SELECT 'Distinct_order_count' AS measure_name, count(DISTINCT order_nbumber) AS measure_value FROM fact_sales
        UNION ALL

        SELECT 'Product_count' AS measure_name,  count(DISTINCT product_key) AS measure_value FROM dim_product
        UNION ALL

        SELECT 'Customer_count' AS measure_name, count(customer_id) AS measure_value FROM dim_customers
        UNION ALL

        SELECT 'Customers_with_orders' AS measure_name, count( DISTINCT customer_id) AS customers_with_orders FROM fact_sales;
    END;
    $$ ;

SELECT *
FROM exp_measure_one();
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Generate the report <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<


-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Explore measures with Magnitude<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
-- Find total customers by countries
SELECT country, count(customer_key ) AS total_cust FROM dim_customers GROUP BY country ORDER BY total_cust DESC ;
-- Find total customers by gender
SELECT gender, count(customer_key ) AS total_cust FROM dim_customers GROUP BY gender ORDER BY total_cust DESC ;
-- Find total products by category
SELECT categry, count(product_key ) AS total_product FROM dim_product GROUP BY categry ORDER BY total_product DESC ;
-- What is the average costs in each category?
SELECT categry, round(avg(cost ),2) AS average_cost FROM dim_product GROUP BY categry ORDER BY average_cost DESC;
-- What is the total revenue generated for each category?
SELECT
    dp.categry,
    sum(fs.sales_amount) AS total_revenu
FROM fact_sales fs
LEFT JOIN dim_product dp
ON fs.product_key = dp.product_key
GROUP BY dp.categry
ORDER BY total_revenu DESC;
-- Find total revenue is generated by each customer
SELECT customer_id, sum(sales_amount) AS sale_per_customer FROM fact_sales GROUP BY customer_id ORDER BY sale_per_customer DESC;
-- What is the distribution of sold items across countries?
SELECT
    dc.country,
    count(order_nbumber) AS order_count
FROM fact_sales fs
         LEFT JOIN dim_customers dc
                   ON fs.customer_id = dc.customer_id
GROUP BY dc.country
ORDER BY order_count DESC;
-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> End of Explore measures with magnitude<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Rank data<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

 -- Which 5 products generate the highest revenue?

SELECT
    dp.product_name,
    sum(fs.sales_amount) AS total_revenu
FROM fact_sales fs
LEFT JOIN dim_product dp
ON fs.product_key = dp.product_key
GROUP BY dp.product_name
ORDER BY total_revenu DESC LIMIT 5;


SELECT *
FROM (
    SELECT
    dp.product_name,
    sum(fs.sales_amount) AS total_revenu,
    row_number() OVER (ORDER BY sum(fs.sales_amount) DESC) AS rank     -- this provides more flexibility
FROM fact_sales fs
LEFT JOIN dim_product dp
ON fs.product_key = dp.product_key
GROUP BY dp.product_name
     ) AS temp
WHERE rank <= 5;


-- What are the 5 worst-performing products in terms of sales?

SELECT
    dp.product_name,
    sum(fs.sales_amount) AS total_revenu
FROM fact_sales fs
LEFT JOIN dim_product dp
ON fs.product_key = dp.product_key
GROUP BY dp.product_name
ORDER BY total_revenu LIMIT  5;

-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> End <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
